
limit_req_zone $binary_remote_addr zone=one:10m rate=10r/s;
limit_req_log_level notice;
limit_req_status 429;
limit_req zone=one burst=20 nodelay;

client_body_timeout 10s;
client_header_timeout 10s;
client_max_body_size 10M;
client_header_buffer_size 4k;

upstream frontend {
  server $FRONTEND:$FRONTEND_PORT;
}

upstream auth_service {
  least_conn;
  server $AUTH_SERVICE:$AUTH_SERVICE_PORT;
}

upstream orders_service {
  least_conn;
  server $ORDERS_SERVICE:$ORDERS_SERVICE_PORT;
}

upstream payments_service {
  least_conn;
  server $PAYMENTS_SERVICE:$PAYMENTS_SERVICE_PORT;
}

upstream tickets_service {
  least_conn;
  server $TICKETS_SERVICE:$TICKETS_SERVICE_PORT;
}

# set default version header to 0
map $http_x_version $req_version {
  default $http_x_version;
  "" "0";
}


map $http_origin $cors_origin_header {
    default "";
    "~(^|^http:\/\/)(localhost$|localhost:[0-9]{1,4}$)" "$http_origin";
    "(https?:\/\/)($DOMAIN)" "$http_origin";
    # "~^https://test-.-dev.ticketing.dev$" "$http_origin"; # https://test-7-dev.ticketing.dev
    # "(https?:\/\/)(ticketing.dev)" "$http_origin";
}

map $http_origin $cors_cred {
    default "";
    "~(^|^http:\/\/)(localhost$|localhost:[0-9]{1,4}$)" "true";
    "(https?:\/\/)($DOMAIN)" "true";
    # "(https?:\/\/)(ticketing.dev)" "true";
}

server {
  listen $PORT;
  listen [::]:$PORT ipv6only=on;
  server_name _;

  real_ip_header X-Forwarded-For;
  add_header Access-Control-Allow-Origin $cors_origin_header always;
  add_header Access-Control-Allow-Credentials $cors_cred;
  add_header Access-Control-Allow-Methods "GET, POST, DELETE, PUT, PATCH, OPTIONS";
  add_header Access-Control-Allow-Headers "X-Version,X-Access-Token,,X-Refresh-Token,Set-Cookie,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Accept,Range";
  add_header Access-Control-Expose-Headers "X-Version,X-Access-Token,Set-Cookie,Content-Length,Content-Range,Content-Type,Accept,Range";
  add_header Vary 'Origin';

  if ($request_method = 'OPTIONS' ) {
    return 204 no-content;
  }

  # Auth Service
  location /api/users {
    proxy_pass http://auth_service;
    proxy_set_header X-Version $req_version;
    proxy_set_header Host $AUTH_SERVICE;
    include /etc/nginx/snippets/proxy.conf;
  }

  location /api/orders {
    proxy_pass http://orders_service;
    proxy_set_header X-Version $req_version;
    proxy_set_header Host $ORDERS_SERVICE;
    include /etc/nginx/snippets/proxy.conf;
  }

  location /api/payments {
    proxy_pass http://payments_service;
    proxy_set_header X-Version $req_version;
    proxy_set_header Host $PAYMENTS_SERVICE;
    include /etc/nginx/snippets/proxy.conf;
  }

  location /api/tickets {
    proxy_pass http://tickets_service;
    proxy_set_header X-Version $req_version;
    proxy_set_header Host $TICKETS_SERVICE;
    include /etc/nginx/snippets/proxy.conf;
  }

  location /.well-known/acme-challenge/ {
    root /var/www/certbot;
  }

  location /ws {
    proxy_pass http://frontend;
    include /etc/nginx/snippets/proxy.conf;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
  }

  location / {
    proxy_pass http://frontend;
    include /etc/nginx/snippets/proxy.conf;
  }

  error_page 500 502 503 504 /50x.html;

  location = /50x.html {
    root /usr/share/nginx/html;
  }

}

