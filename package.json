{
  "name": "ticketing",
  "author": "getlarge",
  "version": "0.2.0",
  "license": "MIT",
  "scripts": {
    "start": "nx serve",
    "start:frontend": "nx run ng-client:serve",
    "start:backend": "nx run-many --target=serve --projects=auth,expiration,orders,payments,tickets --parallel --maxParallel=5",
    "build": "nx build",
    "build:docker:base": "docker build . -t getlarge/ticketing:nx-base",
    "build:docker": "nx run-many --target=docker-build",
    "test": "nx test",
    "nx": "nx",
    "lint": "nx workspace-lint && nx lint",
    "report": "nx report",
    "get:apps": "node tools/nx/get-projects-cli.js -t app -p",
    "get:libs": "node tools/nx/get-projects-cli.js -t lib -p",
    "refresh-pkg-json": "npx nx run-many --target=refresh-pkg-json --projects=$(npm run get:apps)",
    "affected": "nx affected",
    "affected:apps": "nx affected:apps",
    "affected:libs": "nx affected:libs",
    "affected:lint": "nx affected:lint",
    "affected:dep-graph": "nx affected:dep-graph",
    "affected:build:docker": "nx affected --target=docker-build",
    "affected:e2e": "nx affected:e2e",
    "affected:e2e:frontend": "nx affected:e2e --headless --exclude=auth,expiration,orders,payments,tickets,workspace",
    "affected:e2e:backend": "nx affected:e2e --exclude=client-e2e,ng-client-e2e,workspace",
    "format": "nx format:write",
    "format:write": "nx format:write",
    "format:check": "nx format:check",
    "keygen:privkey:": "openssl ecparam -name secp256k1 -genkey -noout -out keys/ec-secp256k1-priv-key.pem",
    "keygen:pubkey": "openssl ec -in ec-secp256k1-priv-key.pem -pubout > keys/ec-secp256k1-pub-key.pem",
    "keygen:pubkey-b64": "cat keys/ec-secp256k1-pub-key.pem | base64",
    "keygen:session": "npx fastify-secure-session > keys/secret-key",
    "keygen:session-b64": "cat keys/secret-key | base64 ",
    "dotenv-pull": "node tools/utils/dotenv-pull.js",
    "dotenv-pull:all": "npx nx run-many --target=dotenv-pull --projects=auth,expiration,orders,tickets,payments",
    "dotenv-push": "node tools/utils/dotenv-push.js",
    "dotenv-push:all": "npx nx run-many --target=dotenv-push --projects=auth,expiration,orders,tickets,payments",
    "docker:proxy:build": "docker build infra/nginx --no-cache -f infra/nginx/Dockerfile -t ticketing/nginx-proxy --build-arg TEMPLATE=nginx.template",
    "docker:proxy:up": "docker run -d --rm --name nginx-proxy --env-file infra/nginx/.env -p 127.0.0.1:80:8080/tcp ticketing/nginx-proxy",
    "docker:proxy:down": "docker kill nginx-proxy",
    "docker:proxy:log": "docker logs -f --tail=100 nginx-proxy",
    "docker:dev:up": "docker-compose -p ticketing --env-file .env --profile dev up -d",
    "docker:dev:down": "docker-compose -p ticketing --env-file .env --profile dev down",
    "docker:dev:log": "docker-compose -p ticketing logs -f --tail=100",
    "docker:deps:up": "docker-compose -p ticketing --env-file .env --profile deps-only up -d",
    "docker:deps:down": "docker-compose -p ticketing --env-file .env --profile deps-only down",
    "docker:deps:clean": "docker volume rm ticketing_mongo_volume ; docker volume rm ticketing_redis_volume ; docker volume rm ticketing_nats_volume",
    "docker:deps:log": "docker-compose -p ticketing logs -f --tail=100",
    "k8s:jwt-secret": "kubectl create secret generic jwt-secret  --from-env-file ./keys/.env",
    "k8s:stripe-secret": "kubectl create secret generic stripe-secret  --from-env-file ./infra/k8s/apps/.env.stripe",
    "k8s:dev:deps": "skaffold dev --module deps --port-forward",
    "k8s:dev:apps": "skaffold dev --module apps",
    "k8s:dev": "skaffold dev --port-forward",
    "k8s:start": "skaffold run",
    "k8s:start:apps": "skaffold run --module apps",
    "k8s:start:deps": "skaffold run --module deps",
    "k8s:stop": "skaffold delete",
    "k8s:stop:apps": "skaffold delete --module apps",
    "k8s:stop:deps": "skaffold delete --module deps",
    "k8s:log": "skaffold run --tail",
    "docs:architecture": "mmdc -i docs/architecture.mmd -o docs/architecture.svg -t neutral -b white",
    "docs:events": "mmdc -i docs/events.mmd -o docs/events.svg -t neutral -b white",
    "docs:journey": "mmdc -i docs/journey.mmd -o docs/journey.svg -t neutral -b white",
    "docs:models": "mmdc -i docs/models.mmd -o docs/models.svg -t neutral -b white",
    "docs:export-mmd": "npm run docs:architecture && npm run docs:events && npm run docs:journey && npm run docs:models",
    "docs:openapi:generate": "ts-node --project tools/tsconfig.json tools/open-api/build-openapi-specs.ts",
    "docs:openapi:lint": "redoc-cli lint docs/openapi.json",
    "docs:openapi:serve": "redoc-cli serve docs/openapi.json",
    "docs:openapi:build": "redoc-cli bundle docs/openapi.json",
    "docs:postman": "ts-node --project tools/tsconfig.json tools/open-api/build-postman-collection.ts",
    "extract-api": "ts-node --project tools/tsconfig.json tools/open-api/generate-ng-openapi.ts",
    "update": "nx migrate latest",
    "dep-graph": "nx dep-graph",
    "version": "node tools/utils/sync-versions",
    "bump:dry-run": "nx run workspace:version --dryRun",
    "bump": "nx run workspace:version",
    "bump:patch": "npm version patch && nx run workspace:version --releaseAs=patch",
    "bump:minor": "npm version minor && nx run workspace:version --releaseAs=minor",
    "tunnel": "node tools/utils/local-tunnel",
    "cz": "cz",
    "prepare": "husky install",
    "postinstall": "ngcc --properties es2015 browser module main"
  },
  "private": true,
  "dependencies": {
    "@angular/animations": "13.3.6",
    "@angular/common": "13.3.6",
    "@angular/compiler": "13.3.6",
    "@angular/core": "13.3.6",
    "@angular/forms": "13.3.6",
    "@angular/platform-browser": "13.3.6",
    "@angular/platform-browser-dynamic": "13.3.6",
    "@angular/router": "13.3.6",
    "@nestjs-plugins/nestjs-nats-streaming-transport": "^1.1.1",
    "@nestjs/axios": "^0.0.3",
    "@nestjs/bull": "^0.4.2",
    "@nestjs/common": "^8.2.3",
    "@nestjs/config": "^1.1.0",
    "@nestjs/core": "^8.2.3",
    "@nestjs/jwt": "^8.0.0",
    "@nestjs/microservices": "^8.2.3",
    "@nestjs/mongoose": "^9.0.1",
    "@nestjs/platform-fastify": "^8.2.3",
    "@nestjs/swagger": "^5.1.4",
    "@nestjs/terminus": "^8.0.1",
    "@ng-bootstrap/ng-bootstrap": "^11.0.0",
    "@ngrx/effects": "^13.0.2",
    "@ngrx/entity": "^13.0.2",
    "@ngrx/store": "^13.0.2",
    "@ngrx/store-devtools": "^13.0.2",
    "@stripe/stripe-js": "^1.22.0",
    "axios": "^0.25.0",
    "bootstrap": "^5.1.3",
    "bull": "^3.29.3",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.13.2",
    "core-js": "^3.6.5",
    "dotenv": "^14.2.0",
    "dotenv-expand": "^6.0.1",
    "fastify": "^3.27.0",
    "fastify-cookie": "^5.5.0",
    "fastify-cors": "^6.0.2",
    "fastify-helmet": "^7.0.0",
    "fastify-passport": "^0.5.0",
    "fastify-secure-session": "^3.0.0",
    "fastify-swagger": "^4.13.1",
    "lodash": "^4.17.21",
    "mongoose": "^6.1.0",
    "mongoose-update-if-current": "^1.4.0",
    "nestjs-keyset-paginator": "^3.0.2",
    "nestjs-pino": "^2.5.0",
    "next": "12.1.5",
    "ngx-stripe": "^13.0.0",
    "passport-jwt": "^4.0.0",
    "passport-local": "^1.0.0",
    "pino-http": "^6.5.0",
    "react": "18.1.0",
    "react-dom": "18.1.0",
    "reflect-metadata": "^0.1.13",
    "regenerator-runtime": "0.13.7",
    "rxjs": "~7.4.0",
    "shortid": "^2.2.16",
    "stripe": "^8.191.0",
    "swr": "^1.0.1",
    "ts-mixer": "^6.0.0",
    "tslib": "^2.0.0",
    "zone.js": "~0.11.4"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "13.3.5",
    "@angular-eslint/eslint-plugin": "~13.0.1",
    "@angular-eslint/eslint-plugin-template": "~13.0.1",
    "@angular-eslint/template-parser": "~13.0.1",
    "@angular/cli": "13.3.5",
    "@angular/compiler-cli": "13.3.6",
    "@angular/language-service": "13.3.6",
    "@apidevtools/swagger-parser": "^10.0.3",
    "@commitlint/cli": "^15.0.0",
    "@commitlint/config-angular": "^15.0.0",
    "@commitlint/config-conventional": "^15.0.0",
    "@dotenv/cli": "^2.0.0",
    "@jscutlery/semver": "^2.15.0",
    "@mermaid-js/mermaid-cli": "^8.13.4",
    "@nestjs/schematics": "^8.0.4",
    "@nestjs/testing": "^8.2.3",
    "@nrwl/angular": "14.1.1",
    "@nrwl/cli": "14.1.1",
    "@nrwl/cypress": "14.1.1",
    "@nrwl/eslint-plugin-nx": "14.1.1",
    "@nrwl/jest": "14.1.1",
    "@nrwl/linter": "14.1.1",
    "@nrwl/nest": "14.1.1",
    "@nrwl/next": "14.1.1",
    "@nrwl/node": "14.1.1",
    "@nrwl/nx-cloud": "14.0.3",
    "@nrwl/react": "14.1.1",
    "@nrwl/tao": "14.1.1",
    "@nrwl/web": "14.1.1",
    "@nrwl/workspace": "14.1.1",
    "@testing-library/react": "13.1.1",
    "@testing-library/react-hooks": "7.0.2",
    "@types/bull": "^3.15.6",
    "@types/jest": "27.4.1",
    "@types/lodash": "^4.14.176",
    "@types/node": "^16.11.12",
    "@types/passport-jwt": "^3.0.6",
    "@types/passport-local": "^1.0.34",
    "@types/pino-http": "^5.8.1",
    "@types/react": "18.0.8",
    "@types/react-dom": "18.0.3",
    "@types/shortid": "^0.0.29",
    "@typescript-eslint/eslint-plugin": "5.18.0",
    "@typescript-eslint/parser": "5.18.0",
    "babel-jest": "27.5.1",
    "commitizen": "^4.2.4",
    "cypress": "^8.3.0",
    "cz-conventional-changelog": "^3.3.0",
    "eslint": "8.12.0",
    "eslint-config-next": "12.1.5",
    "eslint-config-prettier": "8.3.0",
    "eslint-plugin-cypress": "^2.12.1",
    "eslint-plugin-import": "2.26.0",
    "eslint-plugin-jsx-a11y": "6.5.1",
    "eslint-plugin-max-params-no-constructor": "^0.0.4",
    "eslint-plugin-prettier": "4.0.0",
    "eslint-plugin-react": "7.29.4",
    "eslint-plugin-react-hooks": "4.5.0",
    "eslint-plugin-security": "^1.4.0",
    "eslint-plugin-simple-import-sort": "^7.0.0",
    "eslint-plugin-sonarjs": "0.11.0",
    "eslint-plugin-unused-imports": "2.0.0",
    "glob": "^7.2.0",
    "husky": "^7.0.4",
    "jest": "27.5.1",
    "jest-preset-angular": "11.1.1",
    "localtunnel": "^2.0.2",
    "ng-openapi-gen": "^0.20.0",
    "openapi-merge": "^1.3.1",
    "openapi-to-postmanv2": "^2.13.0",
    "prettier": "2.6.2",
    "react-test-renderer": "18.1.0",
    "redoc-cli": "^0.13.0",
    "ts-jest": "27.1.4",
    "ts-node-dev": "^1.1.8",
    "typescript": "4.6.4",
    "yargs": "^17.2.1"
  },
  "config": {
    "commitizen": {
      "path": "cz-conventional-changelog"
    }
  }
}

